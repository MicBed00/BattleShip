#Main class
start = Game starts at {0}
gamePrepared = Game prepared

#Controle/prepareBeforeGame()
length =Player {0} specify length <{1} - {2}>
x = Player {0} specify x
y = Player {0} specify y
position = Player {0} specify position 'V' - vertical or 'H' - horizontal 
addComuni = {0} masted ship added 
logInfoadd = Player add ship
boardReady = Your board is ready!
setupSizeBoard = Do you want to change the size the Board? True or False
sizeBoard = Specify the size of the Board

#Controle/playGame()
player1 = Player1
player2 = Player2
information = Active player: Player{0} 
boardInfo = Opponent's board:
coordX = Player {0} enter shot coordinates X
coordY = Player {0} enter shot coordinates Y
error = Error
gameOver = Game Over
win = The winner is Player {0}
shipSunk = Ship sunk! - {0} 
hit = Hit!
miss = Miss!

#Controle/statistics
stats = Player's statistics:
numberShots = Shot number: {0}
hittedShot = Accurate shots number: {0}
accurancy = Accuracy [%]: {0}
ship = {0} masted ship, position: x = {1}, y = {2}, orientation {3}
type = type: 
masPos =  masthead, position:
pos = position

#UI/ Exception text
inputMismatchException = String cannot be empty. Press enter and re-enter the data
emptyString = Empty String
outOfBounds = Data out of range. Press enter and re-enter the data
dataOut = Data out of range
outOfBoundsPosition = Invalid value. Press enter and re-enter the data.
vertical = vertical
horizontal = horizontal
outOfBoundsShip = Data out of range. Press enter and re-enter the data
collidingException =  Collision
shipLimitExceed = Ship limit reached
invalidValue = Invalid value

